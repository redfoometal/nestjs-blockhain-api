version: "3.9"
services:
  postgres:
    container_name: postgres_container
    build:
      context: ./db         # Путь к папке, содержащей Dockerfile
      dockerfile: db.Dockerfile  # Указываем имя Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql  # (если нужен скрипт инициализации)
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 4G
    networks:
      - postgres

  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:7.2
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
  #     PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
  #     PGADMIN_CONFIG_SERVER_MODE: "False"
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   ports:
  #     - "5050:80"
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1G
  #   networks:
  #     - postgres

volumes:
  db-data:
  # pgadmin-data:

networks:
  postgres:
    driver: bridge
